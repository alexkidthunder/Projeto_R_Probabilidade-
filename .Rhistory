#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
View(alcohol_database)
#######################################################
# CRIANDO FUNÇÕES, PORQUE CANSEI DE PESQUISAR NO GOOGLE
#######################################################
giveme_percentage <- function(column_values, by=0) {
counter_specific <- 0
total <- 0
for(element in column_values) {
if(!is.na(element)) {
if (!is.null(element) && element == by) {
counter_specific <- counter_specific + 1
}
}
total <- total + 1
}
return(scales::percent(counter_specific / total))
}
percentage_wrapper <- function(column) {
for(key in unique(column)) {
if(!is.na(key)) {
percentage_calculated <- giveme_percentage(column, key)
cat(sprintf("\"%s\" \"%s\"\n", key, percentage_calculated))
}
}
}
getmoda <- function(v) {
# 4. A Moda de semestres com relação ao motivo pelo qual começaram a beber
start_drink <- factor(alcohol_database$`PQ_COME€OU`, levels=c(1,2,3,4), labels=c("iniciativa própria", "incentivo de amigos", "incentivo da família","outros motivos"))
start_drink_per_semester_mode <- tapply(start_drink, semester, get_mode)
print(start_drink_per_semester_mode)
#######################################################
# CRIANDO FUNÇÕES, PORQUE CANSEI DE PESQUISAR NO GOOGLE
#######################################################
giveme_percentage <- function(column_values, by=0) {
counter_specific <- 0
total <- 0
for(element in column_values) {
if(!is.na(element)) {
if (!is.null(element) && element == by) {
counter_specific <- counter_specific + 1
}
}
total <- total + 1
}
return(scales::percent(counter_specific / total))
}
percentage_wrapper <- function(column) {
for(key in unique(column)) {
if(!is.na(key)) {
percentage_calculated <- giveme_percentage(column, key)
cat(sprintf("\"%s\" \"%s\"\n", key, percentage_calculated))
}
}
}
getmoda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
get_mode <- function(received_vector) {
unique_values <- unique(received_vector)
valid_values <- unique_values[!is.na(unique_values)]
matches <- match(received_vector, unique_values)
#b <- tabulate(matches)
b <- table(valid_values)
return(names(b)[which.max(b)])
}
get_semester_labels <- function(received_vector) {
semester_levels <- c(1,2,3,4,5,6,7,8,9,10)
semester_labels <- c("primeiro", "segundo", "terceiro", "quarto", "quinto", "sexto", "setimo", "oitavo", "nono", "decimo")
return(factor(received_vector, levels=semester_levels, labels=semester_labels))
}
#################### Semestre e bebida ##################################
# 1. Qual o tipo de bebida mais consumido por semestre
drink_type <- factor(alcohol_database$TIPO, levels = c(1,2,3,4), labels = c("Cerveja", "Vinho", "\"ICE\"", "Outro"))
semester <- get_semester_labels(alcohol_database$SEMESTRE)
mode_drink_per_semester <- tapply(drink_type, semester, get_mode)
print(mode_drink_per_semester)
# 2. Quantidade de pessoas por semestre e por curso
semester_course <- tapply(get_semester_labels(alcohol_database$SEMESTRE), alcohol_database$CURSO, table)
print(semester_course)
############################ Moda #######################################
# 1. Moda da Idade
#which.max(alcohol_database$IDADE)# Pega a posição do maior valor
#max(alcohol_database$IDADE)# Pega o maior valor
e <- c(alcohol_database$IDADE)
getmoda(e)
# 2. Quantidade de pessoas por semestre e por curso
semester_course <- tapply(get_semester_labels(alcohol_database$SEMESTRE), alcohol_database$CURSO, table)
print(semester_course)
##################
# Chamada pacote #
##################
library(readxl, descr) # Load libraries
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
#######################################################
# CRIANDO FUNÇÕES, PORQUE CANSEI DE PESQUISAR NO GOOGLE
#######################################################
giveme_percentage <- function(column_values, by=0) {
counter_specific <- 0
total <- 0
for(element in column_values) {
if(!is.na(element)) {
if (!is.null(element) && element == by) {
counter_specific <- counter_specific + 1
}
}
total <- total + 1
}
return(scales::percent(counter_specific / total))
}
################ Média Idade ##########################################
# 1. Média da idade daqueles que responderam
avg_age <- mean(alcohol_database$IDADE)
print(avg_age)
##################
# Chamada pacote #
##################
library(readxl, descr) # Load libraries
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
View(alcohol_database)
################### Porcentagens #######################
# 1. Porcentagem de pessoas por sexo
GENDER <- factor(alcohol_database$SEXO, levels=c(1,2), labels=c("homem", "mulher"))
percentage_wrapper(GENDER)
#######################################################
# CRIANDO FUNÃÃES, PORQUE CANSEI DE PESQUISAR NO GOOGLE
#######################################################
giveme_percentage <- function(column_values, by=0) {
counter_specific <- 0
total <- 0
for(element in column_values) {
if(!is.na(element)) {
if (!is.null(element) && element == by) {
counter_specific <- counter_specific + 1
}
}
total <- total + 1
}
return(scales::percent(counter_specific / total))
}
percentage_wrapper <- function(column) {
for(key in unique(column)) {
if(!is.na(key)) {
percentage_calculated <- giveme_percentage(column, key)
cat(sprintf("\"%s\" \"%s\"\n", key, percentage_calculated))
}
}
}
getmoda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
get_mode <- function(received_vector) {
unique_values <- unique(received_vector)
valid_values <- unique_values[!is.na(unique_values)]
matches <- match(received_vector, unique_values)
#b <- tabulate(matches)
b <- table(valid_values)
return(names(b)[which.max(b)])
}
get_semester_labels <- function(received_vector) {
semester_levels <- c(1,2,3,4,5,6,7,8,9,10)
semester_labels <- c("primeiro", "segundo", "terceiro", "quarto", "quinto", "sexto", "setimo", "oitavo", "nono", "decimo")
return(factor(received_vector, levels=semester_levels, labels=semester_labels))
}
# 2. Moda da imagem que a bebida alcoÃ³lica causa, agrupado por religiÃ£o
c <- c(alcohol_database$Q_IMAGEM_CAUSA)
getmoda(c)
#################### Renda ###########################################
# 1. Qual o desvio padrÃ£o da renda familiar daqueles que bebem 8 copos de bebida alcoÃ³lica por dia?
rend_bebem <- alcohol_database[alcohol_database$QNTOS_COPOS == 8 ,8]
copos <- sd(rend_bebem$RENDA_FAMILI, na.rm=T)
print(copos)
# 2. Quantos copos por dias viuvos tomam bebidas alcoolicas
alcohol_database[alcohol_database$QNTOS_COPOS == 2 ,5]
# 2. Quantos copos por dias viuvos tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 4 ,15]
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15]
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15, na.rm=T]
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 5, na.rm=T ,15, na.rm=T]
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
total <- alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15]
e <- c(total, na.rm=T)
e
e[e>0]
e <- c(total, na.rm=T)
as.numeric(e)
e <- c(total, na.rm=T)
e
e <- c(total)
e
e <- c(total)
as.numeric(e)
e[e>0]
e
e <- c(total)
sum(e)
sum(total)
sum(total, na.rm=T)
e <- c(total)
e
#sum(total, na.rm=T)# Somatorio
e
mean(total, na.rm=T)
mean(total, na.rm=T)
mean(total)
mean(total, na.rm=T)
mean(total)
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
total <- alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15, na.rm=T]
mean(total)
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15]
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 5, na.rm=T ,15]
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 5, na.rm=T ,15, na.rm=T]
mean(alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15], na.rm=T)
sum(total, na.rm=T)# Somatorio
length(total)
length(alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15])
################### Porcentagens #######################
# 1. Porcentagem de pessoas por sexo
GENDER <- factor(alcohol_database$SEXO, levels=c(1,2), labels=c("homem", "mulher"))
percentage_wrapper(GENDER)
###################### Estado Civil #####################################
# 1. Com que frequencia divorciados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 2 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia divorciados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
GENDER <- alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
percentage_wrapper(GENDER)
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
drink_live_family <- factor(casado$ESTADO_CIVIL, levels=c(1,2,3,4,5), labels=c("Solteiro", "Casado","Divorciado","Viuvo","Relacionamento estável"))
percentage_wrapper(drink_live_family)
# 2. Quantos copos por dias estudantes com relacionamento estável tomam bebidas alcoolicas
total <- alcohol_database[alcohol_database$ESTADO_CIVIL == 5 ,15]
sum(total, na.rm=T)# Somatorio
percentage_wrapper(casado)
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 3 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 2 ,5]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 2 ,5]
drink_live_family <- factor(casado$ESTADO_CIVIL, levels=c(1,2,3,4,5), labels=c("Solteiro", "Casado","Divorciado","Viuvo","Relacionamento estável"))
percentage_wrapper(drink_live_family)
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 2 ,13]
drink_live_family <- factor(casado$ESTADO_CIVIL, levels=c(1,2,3,4,5), labels=c("Solteiro", "Casado","Divorciado","Viuvo","Relacionamento estável"))
percentage_wrapper(drink_live_family)
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 2 ,13]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 2 ,13]
drink_live_family <- factor(casado$VC_BEBI, levels=c(1,2,3,4,5), labels=c("Solteiro", "Casado","Divorciado","Viuvo","Relacionamento estável"))
percentage_wrapper(drink_live_family)
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 2 & 1 ,13]
drink_live_family <- factor(casado$VC_BEBI, levels=c(1,2,3,4,5), labels=c("Solteiro", "Casado","Divorciado","Viuvo","Relacionamento estável"))
percentage_wrapper(drink_live_family)
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
alcohol_database[alcohol_database$ESTADO_CIVIL == 2 & 1 ,13]
###################### Estado Civil #####################################
# 1. Com que frequencia casados tomam bebidas alcoolicas
casado <- alcohol_database[alcohol_database$ESTADO_CIVIL == 2 & 1 ,13]
drink_live_family <- factor(casado$VC_BEBI, levels=c(1,2), labels=c("Toma", "Não toma"))
percentage_wrapper(drink_live_family)
############### RelaÃ§Ã£o com o Ã¡lcool #################################
# 1. Escola em que estudou e toma bebida alcoolica
school_type <- factor(alcohol_database$`ESCOLA Q ESTUDOU`, levels = c(1,2), labels=c("PÃºblica", "Privada"))
# 3. Média de idade em que começou a beber por vontade própria ou por “pressão” de algum conhecido
tapply(alcohol_database$IDADE, alcohol_database$PQ_COMECOU, mean)
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
##################
# Chamada pacote #
##################
library(readxl, descr) # Load libraries
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
# 3. Média de idade em que começou a beber por vontade própria ou por “pressão” de algum conhecido
tapply(alcohol_database$IDADE, alcohol_database$PQ_COMECOU, mean)
tapply(alcohol_database$IDADE, alcohol_database$PRESSAO, mean)
############### Relação com o álcool #################################
# 1. Escola em que estudou e toma bebida alcoolica
school_type <- factor(alcohol_database$`ESCOLA Q ESTUDOU`, levels = c(1,2), labels=c("Pública", "Privada"))
# 2. Escola em que estudou e na família as pessoas tomam bebidas alcoólicas
table (alcohol_database$ESCOLA_Q_ESTUDOU,alcohol_database$FAMILIA_BEBI)
plot(tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T))
plot((alcohol_database$PRESSAO)
plot(alcohol_database$PRESSAO)
plot(alcohol_database$PRESSAO,alcohol_database$religiao, main = "Distribuição da idade por diferença do peso.")
pie(alcohol_database$PRESSAO,alcohol_database$religiao)
barplot(alcohol_database$PRESSAO,alcohol_database$religiao)
barplot(alcohol_database$PRESSAO)
barplot(religian)
barplot(table(alcohol_database$PRESSAO))
tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)
################### Religião #########################################
# 1. Média de pessoas que começaram a beber por vontade própria agrupado por religião
religian <- factor(alcohol_database$religiao, levels=c(1,2,3), labels=c("Católica", "Evangélica","Outra "))
tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)
barplot(table(tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)O))
barplot(table(tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)))
hist(religian, main = "Histograma da Idade do Aluno.")
hist(religian)
hist(alcohol_database$religiao)
hist(alcohol_database$religiaomain = "Média de pessoas que começaram a beber por vontade própria agrupado por religião")
hist(alcohol_database$religiaomain = "Média de pessoas que começaram a beber por vontade própria agrupado por religião")
hist(alcohol_database$religiaomain, main = "Média de pessoas que começaram a beber por vontade própria agrupado por religião")
hist(alcohol_database$religiao, main = "Média de pessoas que começaram a beber por vontade própria agrupado por religião")
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
##################
# Chamada pacote #
##################
library(readxl, descr) # Load libraries
library(scales)
#################################
# Selecionando o banco de dados #
#################################
alcohol_database <- read_excel(
"Banco alcool_Trabalho final.xlsx",  sheet = "grupo 1"
)
View(alcohol_database)
#######################################################
# CRIANDO FUNÃÃES, PORQUE CANSEI DE PESQUISAR NO GOOGLE
#######################################################
giveme_percentage <- function(column_values, by=0) {
counter_specific <- 0
total <- 0
for(element in column_values) {
if(!is.na(element)) {
if (!is.null(element) && element == by) {
counter_specific <- counter_specific + 1
}
}
total <- total + 1
}
return(scales::percent(counter_specific / total))
}
percentage_wrapper <- function(column) {
for(key in unique(column)) {
if(!is.na(key)) {
percentage_calculated <- giveme_percentage(column, key)
cat(sprintf("\"%s\" \"%s\"\n", key, percentage_calculated))
}
}
}
getmoda <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
get_mode <- function(received_vector) {
unique_values <- unique(received_vector)
valid_values <- unique_values[!is.na(unique_values)]
matches <- match(received_vector, unique_values)
#b <- tabulate(matches)
b <- table(valid_values)
return(names(b)[which.max(b)])
}
get_semester_labels <- function(received_vector) {
semester_levels <- c(1,2,3,4,5,6,7,8,9,10)
semester_labels <- c("primeiro", "segundo", "terceiro", "quarto", "quinto", "sexto", "setimo", "oitavo", "nono", "decimo")
return(factor(received_vector, levels=semester_levels, labels=semester_labels))
}
# 2. Moda da imagem que a bebida alcoÃ³lica causa, agrupado por religiÃ£o
c <- c(alcohol_database$Q_IMAGEM_CAUSA)
getmoda(c)
hist(alcohol_database$religiaomain, main = "MÃ©dia de pessoas que comeÃ§aram a beber por vontade prÃ³pria agrupado por religiÃ£o")
################### ReligiÃ£o #########################################
# 1. MÃ©dia de pessoas que comeÃ§aram a beber por vontade prÃ³pria agrupado por religiÃ£o
religian <- factor(alcohol_database$religiao, levels=c(1,2,3), labels=c("CatÃ³lica", "EvangÃ©lica","Outra "))
tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)
hist(alcohol_database$religiaomain, main = "MÃ©dia de pessoas que comeÃ§aram a beber por vontade prÃ³pria agrupado por religiÃ£o")
################### ReligiÃ£o #########################################
# 1. MÃ©dia de pessoas que comeÃ§aram a beber por vontade prÃ³pria agrupado por religiÃ£o
religian <- factor(alcohol_database$religiao, levels=c(1,2,3), labels=c("CatÃ³lica", "EvangÃ©lica","Outra "))
tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)
hist(alcohol_database$religiaomain, main = "MÃ©dia de pessoas que comeÃ§aram a beber por vontade prÃ³pria agrupado por religiÃ£o")
################### Religião #########################################
# 1. Média de pessoas que começaram a beber por vontade própria agrupado por religião
religian <- factor(alcohol_database$religiao, levels=c(1,2,3), labels=c("Católica", "Evangélica","Outra "))
tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)
hist(alcohol_database$religiao, main = "Média de pessoas que começaram a beber por vontade própria agrupado por religião")
hist(alcohol_database$religiao, main = "Média de pessoas que começaram a beber por vontade própria agrupado por religião",
labels=c("Católica", "Evangélica","Outra "))
pie(table(alcohol_database$religiao), main = "Dieta dos pacientes",labels = c("Dieta 1","Dieta 2"))
pie(table(alcohol_database$religiao), main = "Quantidade de cada religião",labels = c("Católica","Evangélica","Outra"))
View(alcohol_database)
hist(alcohol_database$religiao, main = "Média de pessoas que começaram a beber por vontade própria agrupado por religião",
labels=c("Católica", "Evangélica","Outra "))
################### Dados Gráficos Básicos #########################################
# 1. Gráfico agrupado por religião
pie(table(alcohol_database$religiao), main = "Quantidade de cada religião",labels = c("Católica","Evangélica","Outra"))
# 2. Gráfico agrupado por religião
pie(table(alcohol_database$ESCOLA_Q_ESTUDOU), main = "Quantidade de cada tipo de escola que estudou",labels = c("Pública","Privada"))
# 3. Gráfico agrupado por religião
pie(table(alcohol_database$VC_BEBI), main = "Quantidade que tomam bebida alcoolica",labels = c("Bebem","Não Bebem"),col = c("blue", "red"))
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(alcohol_database$VC_BEBI,alcohol_database$TIPO, main = "Distribuição da idade por diferença do peso.", col="blue")
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(alcohol_database$IDADE,alcohol_database$TIPO, main = "Distribuição da idade por diferença do peso.", col="blue")
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(alcohol_database$TIPO, alcohol_database$IDADE, main = "Distribuição da idade por diferença do peso.", col="blue")
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(alcohol_database$IDADE,alcohol_database$TIPO, main = "Distribuição da idade por diferença do peso.", col="blue")
fix(alcohol_database)
###################################################
# Caso tenha que modificar  informações nno banco #
###################################################
fix(alcohol_database)
###################################################
# Caso tenha que modificar  informações nno banco #
###################################################
fix(alcohol_database)
###################################################
# Caso tenha que modificar  informações nno banco #
###################################################
fix(alcohol_database)
View(alcohol_database)
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(alcohol_database$IDADE,alcohol_database$TIPO, main = "Distribuição da idade por diferença do peso.", col="blue")
View(alcohol_database)
# 5. Gráfico agrupado a frequência que bebe.
hist(alcohol_database$FREQUENCIA, main = "Frequência que Bebe.", col="pink")
tapply(alcohol_database$PRESSAO, religian, mean, na.rm=T)
# 5. Gráfico agrupado a frequência que bebe.
hist(alcohol_database$FREQUENCIA, main = "Frequência que Bebe.",labels = c("fins de semana","3 no mês","2 no mês","Em festas"), col="pink")
# 5. Gráfico agrupado a frequência que bebe.
plot(alcohol_database$FREQUENCIA, main = "Frequência que Bebe.",labels = c("fins de semana","3 no mês","2 no mês","Em festas"), col="pink")
# 5. Gráfico agrupado a frequência que bebe.
plot(alcohol_database$FREQUENCIA, main = "Frequência que Bebe.", col="pink")
################### Dados Gráficos Básicos #########################################
# 1. Gráfico agrupado por religião
attach(religiao)
################### Dados Gráficos Básicos #########################################
# 1. Gráfico agrupado por religião
attach(alcohol_database)
pie(table(religiao), main = "Quantidade de cada religião",labels = c("Católica","Evangélica","Outra"))
# 2. Gráfico agrupado por Escolaridade
pie(table(ESCOLA_Q_ESTUDOU), main = "Quantidade de cada tipo de escola que estudou",labels = c("Pública","Privada"))
# 3. Gráfico agrupado por aqueles que bebem ou não.
pie(table(VC_BEBI), main = "Quantidade que tomam bebida alcoolica",labels = c("Bebem","Não Bebem"),col = c("blue", "red"))
# 2. Gráfico agrupado por Escolaridade
pie(table(ESCOLA_Q_ESTUDOU), main = "Quantidade de cada tipo de escola que estudou",labels = c("Pública","Privada"))
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(IDADE,alcohol_database$TIPO, main = "Distribuição da idade por diferença do peso.", col="blue")
# 4. Gráfico agrupado por aqueles que bebem ou não.
plot(IDADE,TIPO, main = "Distribuição da idade por diferença do peso.", col="blue")
# 5. Gráfico agrupado a frequência que bebe.
plot(FREQUENCIA, main = "Frequência que Bebe.", col="pink")
# 5. Gráfico agrupado a frequência que bebe.
plot(FREQUENCIA, main = "Frequência que Bebe.", col="black")
